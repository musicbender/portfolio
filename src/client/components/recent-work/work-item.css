@import '../../style/helpers/variables';
@import '../../style/helpers/mixins';

.work-item {
  position: relative;
  height: 23.5em;
  margin-bottom: 10em;
  > .image-outter-wrapper {
    position: relative;
    width: 59.52%;
    height: 100%;
    > .parallax {
      position: absolute;
      height: 100%;
      &.index-0 {
        left: 0;
        width: calc($grid-m * 4);
        > .parallax-inner  {
          padding-top: calc(1 / 1 * 145%);
        }
      }
      &.index-1 {
        left: calc($grid-m * 4);
        width: calc($grid-s * 4);
        > .parallax-inner  {
          padding-top: calc(1 / 1 * 308%);
        }
      }
      > .parallax-inner {
        position: relative;
        width: 100%;
        height: 0;
        > .wrapper {
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 101.3%;
          overflow-x: hidden;
          overflow-y: auto;
          > * {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
          }
          > .image {
            background-size: cover;
            background-position: left;
            background-repeat: no-repeat;
            &.mobile {
              @media (min-width: $small-desktop-width) {
                display: none;
              }
            }
            &.desktop {
              display: none;
              @media (min-width: $small-desktop-width) {
                display: block;
              }
            }
            &.index-0 {
              background-position: left;
            }
            &.index-1 {
              background-position: right;
            }
          }
          > .image-filter {
            background-color: $purple;
            opacity: 0.15;
          }
          > .image-cover {
            background-color: $purple;
            opacity: 0.93;
            transform: translate3d(0, 0, 0);
            transition: transform 350ms $easeOut;
            &.stopped {
              transform: translate3d(-100%, 0, 0);
              transition: transform 350ms $easeIn;
            }
          }
        }
      }
    }
  }
  > .info-outter-wrapper {
    position: absolute;
    top: 6em;
    left: 0;
    width: 59.52%;
    > [class*="item-info"] {
      visibility: hidden;
      position: absolute;
      left: calc(17% * 4);
    }
    > .parallax {
      position: absolute;
      &.index-0 {
        left: calc($grid-m * 4);
        width: calc($grid-s * 4);
      }
      &.index-1 {
        left: calc(($grid-m * 4) + ($grid-s * 4));
        width: calc($grid-m * 4);
        [class*="item-info"] {
          transform: translateX(-$(s)vw);
        }
      }
      > .parallax-inner {
        position: relative;
        width: 100%;
        > .wrapper {
          overflow-x: hidden;
          overflow-y: auto;
        }
      }
    }
  }
  &.stopped {
    $baseDelay: 150ms;
    $delay: $baseDelay + 2000ms;
    > .info-outter-wrapper {
      > [class*="item-info"] {
        visibility: visible;
        /* > [class*="btn"] {
          > p {
            transform: translate3d(0, 0, 0);
            transition: transform $moderate ease-in-out $slow;
          }
          &:before {
            width: calc(4em - 0.3em);
            transform: translate3d(0, 0, 0);
            transition: transform $moderate ease-in-out $baseDelay, width $moderate ease-in-out $slow;
          }
        } */
      }
      > .parallax {
        visibility: hidden;
      }
    }
  }
  &:not(.stopped) {
    [class*="item-info"][class*="static"] {
      /* > [class*="btn"] {
        > p {
          transform: translate3d(100%, 0, 0);
          transition: transform $fast $easeInOut;
        }
        &:before {
          width: 100%;
          transform: translate3d(100%, 0, 0);
        }
      } */
    }
    .parallax [class*="item-info"]  {
      /* > [class*="btn"] {
        animation: showBtn $fast $easeInOut forwards;
      } */
    }
  }
}
